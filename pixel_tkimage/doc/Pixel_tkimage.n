.TH Pixel_tkimage n 1.1.0 "Pixel-modules"
.HS Pixel_tkimage tcl
.BS
.SH NAME
Pixel_tkimage \- Expose pmaps as Tk images
.SH SYNOPSIS
\fBimage create pmap\fI ?name? ?args?\fR
.br
\fBpixel::tkimage::do_frame\fI pmap\fR
.BE

'\" # CS - begin code excerpt
.de CS
.RS
.nf
.ta .25i .5i .75i 1i
..
'\" # CE - end code excerpt
.de CE
.fi
.RE
..
.SH DESCRIPTION
The Pixel_tkimage extension for Tcl provides a wrapper that implements a new
type of image handler for Tk images, called \fBpmap\fR.  In this way,
\fBpmap\fRs generated by the rest of the Pixel framework can be exposed as
Tk images and used wherever an image is allowed, like the \fB-image\fR option
of label widgets, or on a canvas.
.PP
The image retains it's association with the pmap it was created from, so that
subsequent changes to the underlying pmap can be reflected in the image by
calling a method of the image called \fBdo_frame\fR, or calling the command
\fBpixel::tkimage::do_frame\fR and passing the pmap.  All users of the image
will then update to display the new contents of the pmap.

.SH "CREATING PMAP IMAGES"
Like all images, pmaps are created using the \fBimage create\fR command.
pmap images support the following options:
.TP
\fB\-pmap \fIpmap\fR
Specifies the variable containing the pmap to base the new image on.
.TP
\fB\-width \fIwidth\fR
Specify an integer width in pixels.  If 0 (the default), then use the natural
width of the pmap.
.TP
\fB\-height \fIheight\fR
Specify an integer height in pixels.  If 0 (the default), then use the natural
height of the pmap.

.SH "IMAGE COMMAND"
.PP
When a pmap image is created, Tk also creates a new command whose name is the
same as the image.  This command may be used to invoke various operations on
the image.
It has the following general form:
.CS
\fIimageName option \fR?\fIarg arg ...\fR?
.CE
\fIOption\fR and the \fIarg\fRs
determine the exact behavior of the command.
.PP
The following commands are possible for pmap images:
.TP
\fIimageName \fBdo_frame\fR
Updates the data in the image with any changes made to the underlying pmap.
All users of this image will be updated to display the new image.
.TP
\fIimageName \fBpmap\fR
Retrieve a reference to the pmap underlying the image.

.SH "PACKAGE COMMANDS"
.PP
The Pixel_tkimage extension registers the following new commands in the
interpreter into which it is loaded:
.TP
\fBpixel::tkimage::do_frame \fIpmap\fR
Refresh the image data for any tk images that are based on \fIpmap\fR.  After
this call any image using this pmap will be updated and all users of that image
will update their display.  This does the same thing as the \fBdo_frame\fR
method of the image command that manages the image, but from the other side.
Use this variation when you store a reference to the pmap rather than the image.

.SH EXAMPLE
.PP
Create a pmap with a green square on a black background, wrap it in an image
and display it in a label.  2 seconds later, add a red square and update the
display:
.PP
.CS
% \fBpackage require Pixel_tkimage\fR
1.1.0
% \fBset pmap [pixel::pmap_new 100 100 0x0]\fR
100 100 4
% \fBpixel::box $pmap 0 0 100 100 0xff000000 0\fR
% \fBpixel::box $pmap 10 10 10 10 0xff00ff00 0\fR
% \fBimage create pmap example -pmap $pmap\fR
example
% \fBlabel .l -image example\fR
.l
% \fBpack .l\fR
% \fBupdate\fR
% \fBafter 2000\fR
% \fBpixel::box $pmap 30 20 40 25 0xffff0000 0\fR
% \fBexample do_frame\fR
.CE

.SH "SEE ALSO"
Pixel(n), image(n), pmap(n)

.SH KEYWORDS
pixel, image, pmap
